name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  apk:
    name: Build APK
    runs-on: ubuntu-latest
    container:
      image: joshxt/flutterbuilder:main
    env:
      APP_NAME: AGiXT
      AGIXT_SERVER: https://api.agixt.dev
      APP_URI: https://agixt.dev
    outputs:
      new_tag: ${{ steps.next_tag_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Increment tag version
        uses: mathieudutour/github-tag-action@v6.2
        id: next_tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          create_annotated_tag: true
          dry_run: true
      - name: Setup FFmpeg repositories cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Clone FFmpeg Kit Repository
        run: |
          git clone --branch flutter_3.29_standard https://github.com/nightmarefsm/ffmpeg-kit-new.git /tmp/ffmpeg-kit-new
          
      - name: Setup FFmpeg Build Environment
        run: |
          apt-get update && apt-get install -y \
            build-essential \
            pkg-config \
            cmake \
            ninja-build \
            python3 \
            automake \
            libtool \
            texinfo \
            nasm \
            yasm
      
      - name: Build FFmpeg Libraries
        run: |
          cd /tmp/ffmpeg-kit-new
          # Navigate to android build script directory
          cd android
          # Copy the pre-built libraries into the Flutter project
          mkdir -p /workspaces/mobile/android/app/libs
          # Build for the required architectures or use pre-built if available
          # This may need to be adjusted based on the repository structure
          ./gradlew copyNativeLibraries
          cp -r build/ffmpeg-kit/* /workspaces/mobile/android/app/libs/
          
      - name: Setup Local FFmpeg Maven Repository
        run: |
          cd /tmp/ffmpeg-kit-new/flutter/flutter
          # Copy the Flutter plugin into a local directory
          mkdir -p /workspaces/mobile/local_plugins/ffmpeg_kit_flutter
          cp -r * /workspaces/mobile/local_plugins/ffmpeg_kit_flutter/
          
          # Update pubspec.yaml to use local path
          sed -i 's|ffmpeg_kit_flutter:.*|ffmpeg_kit_flutter:\n    path: ./local_plugins/ffmpeg_kit_flutter|g' /workspaces/mobile/pubspec.yaml
          
          # Update Android build.gradle to use local libraries
          echo "flatDir { dirs '/workspaces/mobile/android/app/libs' }" >> /workspaces/mobile/android/build.gradle
      
      - name: Git Safe Directory
        run: |
            git config --global --add safe.directory /usr/local/flutter && \
            git config --global --add safe.directory /app

      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test
      - name: Build Android release
        run: |
          flutter build apk --release
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release and Upload APK
    needs: [apk]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          name: ${{ needs.apk.outputs.new_tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
      - name: Upload Release APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          files: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ needs.apk.outputs.new_tag }}
