name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  apk:
    name: Build APK
    runs-on: ubuntu-latest
    container:
      image: joshxt/flutterbuilder:main
    env:
      APP_NAME: AGiXT
      AGIXT_SERVER: https://api.agixt.dev
      APP_URI: https://agixt.dev
    outputs:
      new_tag: ${{ steps.next_tag_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Increment tag version
        uses: mathieudutour/github-tag-action@v6.2
        id: next_tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          create_annotated_tag: true
          dry_run: true
      
      - name: Setup Maven
        run: |
          apt-get update && apt-get install -y maven
      
      - name: Setup FFmpeg repositories cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-maven-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-maven-
            ${{ runner.os }}-gradle-
      
      - name: Create libs directory
        run: mkdir -p ./android/app/libs
      
      - name: Clone FFmpeg Kit Repository
        run: |
          git clone --branch flutter_3.29_standard https://github.com/nightmarefsm/ffmpeg-kit-new.git /tmp/ffmpeg-kit-new
      
      - name: Download or extract FFmpeg AAR
        run: |
          # Try to find the AAR in the cloned repository
          find /tmp/ffmpeg-kit-new -name "ffmpeg-kit-https-6.0-2.LTS.aar" -exec cp {} ./android/app/libs/ \;
          
          # If AAR wasn't found, you might need to host the file somewhere and download it
          if [ ! -f "./android/app/libs/ffmpeg-kit-https-6.0-2.LTS.aar" ]; then
            echo "AAR not found in repository, downloading from external source..."
            # Replace with actual URL where you've hosted the AAR file
            # curl -L -o ./android/app/libs/ffmpeg-kit-https-6.0-2.LTS.aar https://your-server.com/ffmpeg-kit-https-6.0-2.LTS.aar
            echo "NOTE: You will need to add the AAR file to your repository or provide a download URL"
          fi
      
      - name: Install AAR to local Maven repository
        run: |
          if [ -f "./android/app/libs/ffmpeg-kit-https-6.0-2.LTS.aar" ]; then
            mvn install:install-file \
              -Dfile=./android/app/libs/ffmpeg-kit-https-6.0-2.LTS.aar \
              -DgroupId=com.arthenica \
              -DartifactId=ffmpeg-kit-https \
              -Dversion=6.0-2.LTS \
              -Dpackaging=aar
              
            echo "FFmpeg AAR installed to local Maven repository"
          else
            echo "WARNING: FFmpeg AAR file not found"
          fi
      
      - name: Update build.gradle for local Maven repository
        run: |
          # Ensure the repositories section includes mavenLocal()
          sed -i '/repositories {/a\\        mavenLocal()' ./android/build.gradle
      
      - name: Git Safe Directory
        run: |
            git config --global --add safe.directory /usr/local/flutter && \
            git config --global --add safe.directory /app

      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Build Android release
        run: |
          flutter build apk --release
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    name: Create Release and Upload APK
    needs: [apk]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          name: ${{ needs.apk.outputs.new_tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
      - name: Upload Release APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          files: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ needs.apk.outputs.new_tag }}
