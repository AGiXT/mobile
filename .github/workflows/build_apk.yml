name: Build and Deploy
on:
  push:
    branches:
      - '**'
jobs:
  apk:
    name: Build APK
    runs-on: ubuntu-latest
    container:
      image: joshxt/flutterbuilder:main
    env:
      APP_NAME: AGiXT
      AGIXT_SERVER: https://api.agixt.dev
      APP_URI: https://agixt.dev
    outputs:
      new_tag: ${{ steps.next_tag_version.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Increment tag version
        uses: mathieudutour/github-tag-action@v6.2
        id: next_tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          create_annotated_tag: true
          dry_run: true
      - name: Setup repositories cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Git Safe Directory
        run: |
            git config --global --add safe.directory /usr/local/flutter && \
            git config --global --add safe.directory /app

      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test
      - name: Build Android release
        run: |
          flutter build apk --release
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Send Report to Discord
        if: always()
        run: |
          # Get build status and branch information
          BRANCH_NAME=$(echo ${{ github.ref }} | awk -F'/' '{print $NF}')
          
          if [ "${{ github.actor }}" == "Josh-XT" ]; then
            DISCORD_NAME="<@381837595522367488>"
          elif [ "${{ github.actor }}" == "waiscodes" ]; then
            DISCORD_NAME="<@670762167037067304>"
          elif [ "${{ github.actor }}" == "birdup000" ]; then
            DISCORD_NAME="<@856308374567256074>"
          elif [ "${{ github.actor }}" == "Nick-XT" ]; then
            DISCORD_NAME="<@381908912951001088>"
          elif [ "${{ github.actor }}" == "rm4453" ]; then
            DISCORD_NAME="<@1104215954356969512>"
          elif [ "${{ github.actor }}" == "Luke-XT" ]; then
            DISCORD_NAME="<@334703813967740938>"
          else
            DISCORD_NAME="**${{ github.actor }}**"
          fi

          # Create the message
          VERSION="${{ steps.next_tag_version.outputs.new_tag }}"
          ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          MESSAGE="âœ… Build successful for **${{ github.repository }}** (branch **$BRANCH_NAME**)\nCommit: **${{ github.sha }}** by ${DISCORD_NAME}\nDownload the APK here: $ARTIFACT_URL"
          
          if [ "$BRANCH_NAME" == "main" ]; then
            MESSAGE+="\nVersion **$VERSION** released!"
          fi

          curl -H "Content-Type:application/json" \
                -d "{\"content\":\"$MESSAGE\"}" \
                "${{ secrets.DISCORD_WEBHOOK }}"

  release:
    name: Create Release and Upload APK
    needs: [apk]
    runs-on: ubuntu-latest
    # Only run the release job on the main branch
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          name: ${{ needs.apk.outputs.new_tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
      - name: Upload Release APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.apk.outputs.new_tag }}
          files: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ needs.apk.outputs.new_tag }}
